# Generated by Django 4.2.11 on 2025-08-22 23:54

import ajaximage.fields
import core.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('races', '0001_initial'), ('races', '0002_race_sponsors'), ('races', '0003_remove_race_background'), ('races', '0004_race_background'), ('races', '0005_auto_20200816_0906'), ('races', '0006_auto_20200816_0929'), ('races', '0007_remove_race_enable_comments'), ('races', '0008_auto_20210321_1908'), ('races', '0009_auto_20210612_1041'), ('races', '0010_report_description'), ('races', '0011_auto_20210612_1045'), ('races', '0012_remove_racer_shirt_size'), ('races', '0013_auto_20210612_1103'), ('races', '0014_auto_20210612_1405'), ('races', '0015_auto_20210612_1405'), ('races', '0016_auto_20210612_1453'), ('races', '0017_race_ultrasignup_id'), ('races', '0018_result_import_data'), ('races', '0019_series'), ('races', '0020_auto_20230308_2336'), ('races', '0021_alter_race_background'), ('races', '0022_remove_race_background')]

    dependencies = [
        ('locations', '0001_initial'),
        ('flickr', '0006_photo_tags'),
        ('flickr', '0002_photo_active'),
        ('sponsors', '0001_initial'),
        ('members', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of event. If there are multiple races assoiated to an "event", make two events.', max_length=200)),
                ('active', models.BooleanField(default=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('annual', models.CharField(blank=True, max_length=32, null=True)),
                ('slug', models.SlugField(blank=True, help_text='Suggested value automatically generated from title and annual. Must be unique.', unique=True)),
                ('slogan', models.CharField(blank=True, max_length=300, null=True)),
                ('logo', ajaximage.fields.AjaxImageField(blank=True, help_text='The logo image is on the top of the race page.', null=True)),
                ('race_type', models.IntegerField(blank=True, choices=[(1, 'Run'), (2, 'Bike'), (3, 'Swim')], default=1, null=True)),
                ('awards', models.TextField(blank=True, null=True)),
                ('distance', models.CharField(blank=True, help_text='eg 26.2', max_length=100, null=True)),
                ('unit', models.IntegerField(blank=True, choices=[(1, 'Kilometers'), (2, 'Miles')], default=1, null=True)),
                ('start_datetime', models.DateTimeField(verbose_name='Start Date and Time')),
                ('description', models.TextField(blank=True)),
                ('course_map', models.URLField(blank=True, help_text='Link to course map if avail.', null=True)),
                ('cut_off', models.CharField(blank=True, help_text='eg: 13 hours', max_length=75, null=True)),
                ('reg_url', models.URLField(blank=True, help_text='Link to registartion flyer or to registration URL for online signup.', null=True)),
                ('reg_description', models.TextField(blank=True, null=True)),
                ('entry_form', models.FileField(blank=True, null=True, upload_to='races/entry_forms')),
                ('discounts', models.TextField(blank=True, help_text='Describe discounts for the race if they exist.', null=True)),
                ('lodging', models.URLField(blank=True, help_text='Link to lodging information', null=True)),
                ('packet_pickup', models.TextField(blank=True, null=True)),
                ('facebook_url', models.URLField(blank=True, help_text='Link to Facebook page', null=True)),
                ('facebook_event_url', models.URLField(blank=True, help_text='Link to Facebook Event page', null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.location')),
                ('race_directors', models.ManyToManyField(to='members.member')),
                ('sponsors', models.ManyToManyField(related_name='sponsors', to='sponsors.sponsor')),
                ('ultrasignup_id', models.CharField(blank=True, help_text='This should be the ID of your UltraSignup.com ?did=', max_length=50, null=True)),
            ],
            options={
                'ordering': ['-start_datetime'],
                'verbose_name': 'Race',
                'verbose_name_plural': 'Races',
            },
            bases=(models.Model, core.models.ShortUrlMixin),
        ),
        migrations.CreateModel(
            name='Racer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=13, null=True)),
                ('gender', models.IntegerField(choices=[(1, 'Man'), (2, 'Woman')])),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=40, null=True)),
                ('state', models.CharField(blank=True, max_length=40, null=True)),
                ('country', models.CharField(blank=True, max_length=40, null=True)),
                ('trailhawk', models.OneToOneField(blank=True, help_text='If racer is a trailhawk select profile.', null=True, on_delete=django.db.models.deletion.CASCADE, to='members.member')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
                'verbose_name': 'Racer',
                'verbose_name_plural': 'Racers',
            },
        ),
        migrations.CreateModel(
            name='RaceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('reg_date', models.DateField(verbose_name='Registration Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('reg_cost', models.IntegerField(verbose_name='Registration Cost')),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='races.race')),
            ],
            options={
                'verbose_name': 'Registration Dates',
                'verbose_name_plural': 'Registration Dates',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report', models.URLField(help_text='Link to race report')),
                ('title', models.CharField(max_length=200)),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='races.race')),
                ('racer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='races.racer')),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bib_number', models.IntegerField(blank=True, null=True)),
                ('time', models.CharField(blank=True, max_length=20, null=True)),
                ('place', models.TextField(blank=True, help_text='Ex. First Overall Man or First Masters Woman', null=True)),
                ('course_record', models.BooleanField(default=False)),
                ('dq', models.BooleanField(default=False, verbose_name='Disqualified')),
                ('dns', models.BooleanField(default=False, verbose_name='Did not Start')),
                ('dnf', models.BooleanField(default=False, verbose_name='Did not Finish')),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='races.race')),
                ('race_type', models.ForeignKey(blank=True, help_text='For races with multiple race types.', null=True, on_delete=django.db.models.deletion.CASCADE, to='races.racetype')),
                ('racer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='races.racer')),
                ('import_data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ('time',),
                'verbose_name': 'Result',
                'verbose_name_plural': 'Results',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True)),
                ('races', models.ManyToManyField(related_name='series', to='races.race')),
            ],
            options={
                'verbose_name': 'Series',
                'verbose_name_plural': 'Series',
            },
        ),
    ]
